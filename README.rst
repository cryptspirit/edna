Проект остановлен
==================

Разработки в этом репозитории остановлены в связи с тем что цели этого проекта были уже достигнуты (если и не достигнуты то уже в стадии реализации) проектом `sunflower-fm <http://code.google.com/p/sunflower-fm/>`_
Мы желаем разработчикам удачи и надеемся на их успех. Репозиторий решено оставить. Вдруг кому нибудь понадобятся наши решения.

Лицензия
========

Распространяется на основе общественной лицензии GPL версии 2 и выше

Описание
========

Существует большое количество двухпанельных файловых менеджеров. Небольшая часть их припадает на unix-подобные операционные системы. Еще меньшая часть реализована на Gtk. На данный момент автору кажется что "нормального" удобного файлового менеджера (с двумя панелями) попадающего под эти критерии не существует.

Цели
====

Основная цель это простой, настраиваемый файловый менеджер, который хорошо интегрируется в среду рабочего стола Gnome и подобных ему DE.

* Полная настройка. С использованием графического интерфейса так и с возможностью правки конфигурационного файла.

* До первого релиза использовать как можно меньше модулей не входящих в стандартную поставку Python-а. для уменьшения числа зависимостей.

* Гибкая и разнообразная система выделения и группового запуска файлов по ассоциациям. Основной проблемой некоторых файловых менеджеров (например, tux commander) является выделение элементов списка. Для запуска группы элементов необходимо их просто выделить и нажать клавишу Enter (не щелчок мышью). 
файловый менеджер сам распределяет все файлы по ассоциациям и перенаправляет их на приложения либо сразу весь список, либо запускает каждый раз с новым файлом. То есть выделение тоже должно быть "функциональным" и иметь  расширенные настройки.

* Использования системных (XDG) mime-type для определения иконок и ассоциаций файлов с возможностью правок ассоциаций и добавления своих настроек на уровне приложения без изменения системных настроек.

* Возможность создания плагинов и расширения на языке программирования Python. Это означает предоставить возможность простой и понятной разработки и внедрения различных плагинов без изменения исходного кода под разные требование.

* Максимальная "информативность". В большинстве операций и действий отображать как можно больше информации об объекте, над которым это действие происходит. Например, при возникновении ошибки чтения окно, которое сообщит об этой ошибке, выводит подробную информацию об этом объекте. Таким образом, пользователь может уже в первые секунды определить причину ошибки.

* Каждая пользовательская операция или функция могут иметь одну комбинацию клавиш (с возможность изменения абсолютно всех горячих клавиш). Что позволяет быстро выполнять постоянные действия.

Установка
==========

Для установки проекта необходимо от имени суперпользователя выпонить команду в корневом каталоге с исходниками 

python setup.py install

Для сборки deb пакета введите команду

python setup.py --command-packages=stdeb.command bdist_deb
